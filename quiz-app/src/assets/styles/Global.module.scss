@use "./variables" as v;
@use "./mixins" as m;

html {
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
}

* {
  margin: 0;
  padding: 0;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  width: 100%;
  min-height: 100vh;
  min-height: 100dvh;

  overflow-y: auto;
}

main {
  min-height: 100vh;
  min-height: 100dvh;

  background-repeat: no-repeat;
  background-position: top left;
  background-size: 100% auto;
}

main.dark-theme {
  color: v.$color-pure-white;
  background-color: v.$color-dark-navy;
  background-image: url("../images/pattern-background-mobile-dark.svg");
}

main.light-theme {
  color: v.$color-dark-navy;
  background-color: v.$color-light-grey;
  background-image: url("../images/pattern-background-mobile-light.svg");
}

@media (min-width: 30rem) {
  main {
    background-position: top left;
    background-size: 50%;
  }

  main.dark-theme {
    background-image: url("../images/pattern-background-tablet-dark.svg");
  }

  main.light-theme {
    background-image: url("../images/pattern-background-tablet-light.svg");
  }
}

@media (min-width: 54rem) {
  main {
    background-position: center;
    background-size: cover;
  }

  main.dark-theme {
    background-image: url("../images/pattern-background-desktop-dark.svg");
  }

  main.light-theme {
    background-image: url("../images/pattern-background-desktop-light.svg");
  }
}

svg {
  inline-size: clamp(1.8125rem, 1.5704rem + 1.0329vw, 2.5rem);
  block-size: clamp(1.8125rem, 1.5704rem + 1.0329vw, 2.5rem);
}
